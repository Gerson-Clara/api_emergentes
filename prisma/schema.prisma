// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model Cliente {
  id           String   @db.VarChar(36) @id @default(uuid())
  nome         String   @db.VarChar(60)
  email        String   @db.VarChar(60) @unique
  senha        String   @db.VarChar(60)   // senha deve ser varchar(60)
  compras      Compra[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  @@map("clientes")
}

model Marca {
  id        Int      @id @default(autoincrement())
  nome      String   @db.VarChar(30)
  oculos    Oculos[]
  @@map("marcas")
}

model Oculos {
  id          Int      @id @default(autoincrement())
  preco       Decimal  @db.Decimal(10, 2)
  destaque    Boolean  @default(true)
  foto        String
  formato     Formatos @default(Irregular)
  material    String
  genero      String
  descricao   String?
  marca       Marca    @relation(fields: [marcaId], references: [id])
  marcaId     Int
  admin       Admin        @relation(fields: [adminId], references: [id])
  adminId     Int          @default(1)
  modelo      String
  fotos       Foto[]
  compras     Compra[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@map("oculos")
}

model Compra {
  id          Int      @id @default(autoincrement())
  cliente     Cliente  @relation(fields: [clienteId], references: [id])
  clienteId   String   @db.VarChar(36)
  oculos      Oculos    @relation(fields: [oculosId], references: [id])
  oculosId    Int
  descricao   String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@map("compras")
}

model Admin {
  id           Int      @id @default(autoincrement())
  nome         String   @db.VarChar(60)
  email        String   @db.VarChar(60) @unique
  senha        String   @db.VarChar(60)   // senha deve ser varchar(60)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  oculos       Oculos[]
  @@map("admins")
}

model Foto {
  id          Int      @id @default(autoincrement())
  descricao   String   @db.VarChar(30)
  codigoFoto  String   @db.Text
  oculos      Oculos   @relation(fields: [oculosId], references: [id])
  oculosId    Int
  @@map("fotos")
}

enum Formatos {
  Quadrado
  Redondo
  Irregular
}